{"pageProps":{"framework":{"fullName":"ExpressJs","shortName":"express","end":"back","available":true,"description":"All the ExpressJs starter projects are based on the *ExpressJs \"Hello World\" example, but with *cors middleware added so as to allow front and back end to be on localhost, and *nodemon to restart the development server on every change made in any file.","descriptionLinks":[{"title":"ExpressJs \"Hello World\"","label":"ExpressJS site with explanation","link":"https://expressjs.com/en/starter/hello-world.html"},{"title":"cors middleware","label":"ExpressJS site with explanation","link":"https://expressjs.com/en/resources/middleware/cors.html"},{"title":"nodemon","label":"the nodemon npm registry website","link":"https://www.npmjs.com/package/nodemon"}],"setups":[{"fullName":"Blank ExpressJs setup","description":{"brief":"Simple ExpressJs server with a \"Hello World\" get route, cors middleware, and nodemon","full":"Simple ExpressJs server with a \"Hello World\" get route, a basic cors middleware implementation, and nodemon to restart the development server on every change made in any file","dependencies":"express, cors, nodemon","links":[]},"id":3},{"fullName":"Mongodb implementation with mongoose in ExpressJs","description":{"brief":"Connection to DB established, demonstration of finding and adding elements to a model, and basic schema setup","full":"This setup demonstrates connecting to mongodb via mongoose, setting up a basic schema, and using that schema to find and add elements to the DB via a mongoose model","dependencies":"mongoose, dotenv","links":[{"title":"mongoose","link":"https://mongoosejs.com/docs/"},{"title":"dotenv","link":"https://www.npmjs.com/package/dotenv"}]},"id":4},{"fullName":"JsonWebToken implementation with ExpressJs","description":{"brief":"jwt signing, verifying, and application in middleware that reads token from header","full":"The implementation demonstrated how to sign data with a secret, verify it, and how to create a middleware function to check if there exists a header with the authentication key containing the token","dependencies":"jsonwebtoken, dotenv","links":[{"title":"jsonwebtoken","link":"https://www.digitalocean.com/community/tutorials/nodejs-jwt-expressjs"},{"title":"dotenv","link":"https://www.npmjs.com/package/dotenv"}]},"id":5}],"language":"NodeJs"}},"__N_SSG":true}